var l=class extends Chart{constructor({canvasId:o,datasets:t,scales:a}){let r=document.getElementById(o).getContext("2d"),n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:a.x,y:a.y}},data:{datasets:t}};super(r,n);this._originalDatasets=t}filter(o){this.data.datasets=this._originalDatasets.filter(t=>t.label?.includes(o)),this.update()}};var m=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:m.SCALES})}},d=m;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var g=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:g.SCALES})}},p=g;p.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var x=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:x.SCALES})}},u=x;u.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function c({rows:i,label:e,x:o,y:t}){let a=i.reduce((r,n)=>(r[n[e]]||(r[n[e]]={label:n[e],data:[]}),r[n[e]].data.push({x:n[o],y:n[t]}),r),{});return Object.values(a)}function w(i){let e=i.reduce((t,a)=>{let s=a.date;t[s]||(t[s]={});let r=a.exercise;return t[s][r]||(t[s][r]={...a,weight:-1/0}),a.weight>=t[s][r].weight&&(t[s][r]=a),t},{});return Object.keys(e).flatMap(t=>Object.values(e[t]))}function f(i){let e=i.reduce((t,a)=>{let s=a.date;t[s]||(t[s]={});let r=a.exercise;return t[s][r]||(t[s][r]={load:0,...a}),t[s][r].load+=a.weight*a.volume,t},{});return Object.keys(e).flatMap(t=>Object.values(e[t]))}function C(i){let e=i.reduce((t,a)=>{let s=a.date;return t[s]||(t[s]={load:0,...a}),t[s].load+=a.weight*a.volume,t},{});return Object.values(e)}var R=["bench","squat","deadlift","pull up","bicep","tricep"],b=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],E=50;function D({rows:i,label:e,minFrequency:o}){let a=c({rows:i,label:e,x:"date",y:"weight"}).reduce((s,r)=>(s[r.label]=r.data.length,s),{});return i.filter(s=>a[s[e]]>=o)}function v({rows:i,label:e,includes:o=[],excludes:t=[]}){return i.filter(a=>o.some(s=>a[e].toString().includes(s))&&t.every(s=>!a[e].toString().includes(s)))}function S(i){i=D({rows:i,label:"exercise",minFrequency:E}),i=v({rows:i,label:"exercise",includes:R,excludes:b});let e=w(i),o=c({rows:e,label:"exercise",x:"date",y:"weight"}),t=c({rows:e,label:"exercise",x:"date",y:"volume"}),a=c({rows:f(i),label:"exercise",x:"date",y:"load"}),s=c({rows:C(i),label:"date",x:"date",y:"load"});return{labels:i.map(r=>r.exercise),weights:o,volumes:t,exercisesLoad:a,workoutLoad:s}}var h=class{constructor({selectId:e,options:o,onChange:t}){let a=document.getElementById(e);a.onchange=r=>t(r.target.value);let s=document.createElement("option");s.value="",s.textContent="",a.appendChild(s),[...new Set(o)].sort().forEach(r=>{let n=document.createElement("option");n.value=r,n.textContent=r,a.appendChild(n)})}};var L=class{constructor(e,o=";"){this._rows=this.buildRows(e,o)}rows(){return this._rows}buildRows(e,o){let t=e.split(`
`),a=t[0].split(o);return t.slice(1).map(r=>this.buildRow(a,r,o))}buildRow(e,o,t){let a=o.split(t),s={};for(let r=0;r<e.length;r++){let n=L.HEADERS_MAP[e[r]];n&&(s[n]=this.sanitizeValue(a[r]))}return s}sanitizeValue(e){return e.trim().replaceAll('"',"").toLowerCase()}},y=L;y.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function A(i){return await(await fetch(i)).text()}async function Y(){let i=await A("data/workouts.csv"),o=new y(i).rows(),t=S(o),a=new u({canvasId:"heaviest-sets-weight-chart",datasets:t.weights}),s=new p({canvasId:"heaviest-sets-volume-chart",datasets:t.volumes}),r=new d({canvasId:"exercises-load-chart",datasets:t.exercisesLoad});new d({canvasId:"workout-load-chart",datasets:t.workoutLoad}),new h({selectId:"exercises-filter",options:t.labels,onChange:n=>{a.filter(n),s.filter(n),r.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await Y());
