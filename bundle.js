var l=class extends Chart{constructor({canvasId:o,datasets:e,scales:a}){let r=document.getElementById(o).getContext("2d"),n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:a.x,y:a.y}},data:{datasets:e}};super(r,n);this._originalDatasets=e}filter(o){this.data.datasets=this._originalDatasets.filter(e=>e.label?.includes(o)),this.update()}};var x=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:x.SCALES})}},c=x;c.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var g=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:g.SCALES})}},d=g;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var L=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:L.SCALES})}},u=L;u.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function p({rows:i,label:s,x:o,y:e}){let a=i.reduce((r,n)=>{let m=n[s],M=n[o],O=n[e];return r[m]||(r[m]={label:m,data:[]}),r[m].data.push({x:M,y:O}),r},{});return Object.values(a)}function C(i){let s=i.reduce((e,a)=>{let t=a.date;e[t]||(e[t]={});let r=a.exercise;return e[t][r]||(e[t][r]={...a,weight:-1/0}),a.weight>=e[t][r].weight&&(e[t][r]=a),e},{});return Object.keys(s).flatMap(e=>Object.values(s[e]))}function w(i){let s=i.reduce((e,a)=>{let t=a.date;e[t]||(e[t]={});let r=a.exercise;return e[t][r]||(e[t][r]={load:0,...a}),e[t][r].load+=a.weight*a.volume,e},{});return Object.keys(s).flatMap(e=>Object.values(s[e]))}function b(i){let s=i.reduce((e,a)=>{let t=a.date;return e[t]||(e[t]={load:0,...a}),e[t].load+=a.weight*a.volume,e},{});return Object.values(s)}var E=["bench","squat","deadlift","pull up","bicep","tricep"],R=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],D=50;function S({rows:i,label:s,minFrequency:o}){let a=p({rows:i,label:s,x:"date",y:"weight"}).reduce((t,r)=>(t[r.label]=r.data.length,t),{});return i.filter(t=>a[t[s]]>=o)}function v({rows:i,label:s,includes:o=[],excludes:e=[]}){return i.filter(a=>o.some(t=>a[s].toString().includes(t))&&e.every(t=>!a[s].toString().includes(t)))}function A(i){i=S({rows:i,label:"exercise",minFrequency:D}),i=v({rows:i,label:"exercise",includes:E,excludes:R});let s=C(i),o=p({rows:s,label:"exercise",x:"date",y:"weight"}),e=p({rows:s,label:"exercise",x:"date",y:"volume"}),a=p({rows:w(i),label:"exercise",x:"date",y:"load"}),t=p({rows:b(i),label:"date",x:"date",y:"load"});return{labels:i.map(r=>r.exercise),weights:o,volumes:e,exercisesLoad:a,workoutLoad:t}}var h=class{constructor({selectId:s,options:o,onChange:e}){let a=document.getElementById(s);a.onchange=r=>e(r.target.value);let t=document.createElement("option");t.value="",t.textContent="(no filter)",a.appendChild(t),[...new Set(o)].sort().forEach(r=>{let n=document.createElement("option");n.value=r,n.textContent=r,a.appendChild(n)})}};var f=class{parse(s){let o=s.split(`
`),e=o[0].split(";");return o.slice(1).map(t=>this.buildRow(e,t,";"))}buildRow(s,o,e){let a=o.split(e),t={};for(let r=0;r<s.length;r++){let n=f.HEADERS_MAP[s[r]];n&&(t[n]=this.sanitizeValue(a[r]))}return t}sanitizeValue(s){return s.trim().replaceAll('"',"").toLowerCase()}},y=f;y.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function Y(i){return await(await fetch(i)).text()}async function I(){let i=await Y("data/workouts.csv"),o=new y().parse(i),e=A(o),a=new u({canvasId:"heaviest-sets-weight-chart",datasets:e.weights}),t=new d({canvasId:"heaviest-sets-volume-chart",datasets:e.volumes}),r=new c({canvasId:"exercises-load-chart",datasets:e.exercisesLoad});new c({canvasId:"workout-load-chart",datasets:e.workoutLoad}),new h({selectId:"exercises-filter",options:e.labels,onChange:n=>{a.filter(n),t.filter(n),r.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await I());
