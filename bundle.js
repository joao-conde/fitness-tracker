var w=(s,t,r)=>{if(!t.has(s))throw TypeError("Cannot "+r)};var C=(s,t,r)=>(w(s,t,"read from private field"),r?r.call(s):t.get(s)),E=(s,t,r)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,r)},b=(s,t,r,e)=>(w(s,t,"write to private field"),e?e.call(s,r):t.set(s,r),r);var l=class extends Chart{constructor(r,e,o){let i=document.getElementById(r)?.getContext("2d");if(!i)throw Error("no context");let n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:o.x,y:o.y}},data:{datasets:e}};super(i,n);this.originalDatasets=e}filter(r){this.data.datasets=this.originalDatasets.filter(e=>e.label?.includes(r)),this.update()}};var h=class extends l{constructor(t,r){super(t,r,h.SCALES)}},u=h;u.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var x=class extends l{constructor(t,r){super(t,r,x.SCALES)}},d=x;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var f=class extends l{constructor(t,r){super(t,r,f.SCALES)}},p=f;p.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function c({rows:s,label:t,x:r,y:e}){let o=s.reduce((i,n)=>(i[n[t]]||(i[n[t]]={label:n[t],data:[]}),i[n[t]].data.push({x:n[r],y:n[e]}),i),{});return Object.values(o)}function S(s){let t=s.reduce((e,o)=>{let a=o.date;e[a]||(e[a]={});let i=o.exercise;return e[a][i]||(e[a][i]={...o,weight:-1/0}),o.weight>=e[a][i].weight&&(e[a][i]=o),e},{});return Object.keys(t).flatMap(e=>Object.values(t[e]))}function R(s){let t=s.reduce((e,o)=>{let a=o.date;e[a]||(e[a]={});let i=o.exercise;return e[a][i]||(e[a][i]={load:0,...o}),e[a][i].load+=o.weight*o.volume,e},{});return Object.keys(t).flatMap(e=>Object.values(t[e]))}function D(s){let t=s.reduce((e,o)=>{let a=o.date;return e[a]||(e[a]={load:0,...o}),e[a].load+=o.weight*o.volume,e},{});return Object.values(t)}var v=["bench","squat","deadlift","pull up","bicep","tricep"],A=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],Y=50;function M({rows:s,label:t,minFrequency:r}){let o=c({rows:s,label:t,x:"date",y:"weight"}).reduce((a,i)=>(a[i.label]=i.data.length,a),{});return s.filter(a=>o[a[t]]>=r)}function k({rows:s,label:t,includes:r=[],excludes:e=[]}){return s.filter(o=>r.some(a=>o[t].toString().includes(a))&&e.every(a=>!o[t].toString().includes(a)))}function T(s){s=M({rows:s,label:"exercise",minFrequency:Y}),s=k({rows:s,label:"exercise",includes:v,excludes:A});let t=S(s),r=c({rows:t,label:"exercise",x:"date",y:"weight"}),e=c({rows:t,label:"exercise",x:"date",y:"volume"}),o=c({rows:R(s),label:"exercise",x:"date",y:"load"}),a=c({rows:D(s),label:"date",x:"date",y:"load"});return{labels:s.map(i=>i.exercise),weights:r,volumes:e,exercisesLoad:o,workoutLoad:a}}var m=class{constructor({selectId:t,options:r,onChange:e}){let o=document.getElementById(t);if(!o)return;o.onchange=i=>e(i.target.value);let a=document.createElement("option");a.value="",a.textContent="",o.appendChild(a),[...new Set(r)].sort().forEach(i=>{let n=document.createElement("option");n.value=i,n.textContent=i,o.appendChild(n)})}};var y,L=class{constructor(t,r=";"){E(this,y,void 0);b(this,y,this.buildRows(t,r))}rows(){return C(this,y)}buildRows(t,r){let e=t.split(`
`),o=e[0].split(r);return e.slice(1).map(i=>this.buildRow(o,i,r))}buildRow(t,r,e){let o=r.split(e),a={};for(let i=0;i<t.length;i++){let n=L.HEADERS_MAP[t[i]];n&&(a[n]=this.sanitizeValue(o[i]))}return a}sanitizeValue(t){return t.trim().replaceAll('"',"").toLowerCase()}},g=L;y=new WeakMap,g.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function B(s){return await(await fetch(s)).text()}async function I(){let s=await B("data/workouts.csv"),r=new g(s).rows(),e=T(r),o=new p("heaviest-sets-weight-chart",e.weights),a=new d("heaviest-sets-volume-chart",e.volumes),i=new u("exercises-load-chart",e.exercisesLoad);new u("workout-load-chart",e.workoutLoad),new m({selectId:"exercises-filter",options:e.labels,onChange:n=>{o.filter(n),a.filter(n),i.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await I());
