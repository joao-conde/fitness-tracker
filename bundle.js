var l=class extends Chart{constructor({canvasId:s,datasets:t,scales:r,borderWidth:e=1.5,pointRadius:o=2,pointHoverRadius:n=5}){let g=document.getElementById(s).getContext("2d"),L={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:r.x,y:r.y}},data:{datasets:t.map(I=>({...I,borderWidth:e,pointRadius:o,pointHoverRadius:n}))}};super(g,L);this.originalDatasets=this.data.datasets}filter(s){this.data.datasets=this.originalDatasets.filter(t=>t.label?.includes(s)),this.update()}};var f=class extends l{constructor({canvasId:a,datasets:s}){super({canvasId:a,datasets:s,scales:f.SCALES})}},c=f;c.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD MMM YYYY",displayFormats:{day:"DD MMM YYYY"}}},y:{title:{display:!0,text:"Total Load"},beginAtZero:!0}};var w=class extends l{constructor({canvasId:a,datasets:s}){super({canvasId:a,datasets:s,scales:w.SCALES})}},u=w;u.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD MMM YYYY",displayFormats:{day:"DD MMM YYYY"}}},y:{title:{display:!0,text:"Best Set Repetitions"},beginAtZero:!0}};var C=class extends l{constructor({canvasId:a,datasets:s}){super({canvasId:a,datasets:s,scales:C.SCALES})}},y=C;y.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD MMM YYYY",displayFormats:{day:"DD MMM YYYY"}}},y:{title:{display:!0,text:"Best Set Weight (kg)"},beginAtZero:!0}};var b=class extends l{constructor({canvasId:a,datasets:s}){super({canvasId:a,datasets:s,scales:b.SCALES})}},m=b;m.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD MMM YYYY",displayFormats:{day:"DD MMM YYYY"}}},y:{title:{display:!0,text:"Body Weight (kg)"}}};var x=class{constructor({selectId:a,options:s,onChange:t}){let r=document.getElementById(a);r.onchange=o=>t(o.target.value);let e=document.createElement("option");e.value="",e.textContent="",r.appendChild(e),[...new Set(s)].sort().forEach(o=>{let n=document.createElement("option");n.value=o,n.textContent=o,r.appendChild(n)})}};function p({rows:i,label:a,x:s,y:t}){let r=i.reduce((o,n)=>{let d=n[a],g=n[s],L=n[t];return o[d]||(o[d]={label:d,data:[]}),o[d].data.push({x:g,y:L}),o},{});return Object.values(r)}function E(i){let a=i.reduce((t,r)=>{let e=r.date;t[e]||(t[e]={});let o=r.exercise;return t[e][o]||(t[e][o]={...r,weight:-1/0}),r.weight>=t[e][o].weight&&(t[e][o]=r),t},{});return Object.keys(a).flatMap(t=>Object.values(a[t]))}function S(i){let a=i.reduce((t,r)=>{let e=r.date;t[e]||(t[e]={});let o=r.exercise;return t[e][o]||(t[e][o]={load:0,...r}),t[e][o].load+=r.weight*r.volume,t},{});return Object.keys(a).flatMap(t=>Object.values(a[t]))}function v(i){let a=i.reduce((t,r)=>{let e=r.date;return t[e]||(t[e]={load:0,...r}),t[e].load+=r.weight*r.volume,t},{});return Object.values(a)}var A=["bench","squat","deadlift","pull up","bicep","tricep"],M=["decline","bodyweight","close grip","assisted","rope tricep pushdown"],Y=50;function O({rows:i,label:a,minFrequency:s}){let r=p({rows:i,label:a,x:"date",y:"weight"}).reduce((e,o)=>(e[o.label]=o.data.length,e),{});return i.filter(e=>r[e[a]]>=s)}function B({rows:i,label:a,includes:s=[],excludes:t=[]}){return i.filter(r=>s.some(e=>r[a].toString().includes(e))&&t.every(e=>!r[a].toString().includes(e)))}function k(i,a){i=O({rows:i,label:"exercise",minFrequency:Y}),i=B({rows:i,label:"exercise",includes:A,excludes:M});let s=E(i),t=p({rows:s,label:"exercise",x:"date",y:"weight"}),r=p({rows:s,label:"exercise",x:"date",y:"volume"}),e=p({rows:S(i),label:"exercise",x:"date",y:"load"}),o=p({rows:v(i),label:"date",x:"date",y:"load"}),n=p({rows:a,label:"date",x:"date",y:"weight"});return{labels:i.map(d=>d.exercise),weights:t,volumes:r,exercisesLoad:e,workoutLoad:o,bodyWeights:n}}var D=class{parse(a){let s=a.split(`
`),t=s[0].trim().split(";");return s.slice(1).map(e=>this.buildRow(t,e,";")).filter(e=>e!=null)}buildRow(a,s,t){let r=s.trim().split(t),e={};for(let o=0;o<a.length;o++){let n=D.HEADERS_MAP[a[o]];n&&(e[n]=this.sanitizeValue(r[o]))}return e}sanitizeValue(a){return a.trim().replaceAll('"',"").toLowerCase()}},h=D;h.HEADERS_MAP={'"Date"':"date",'"Exercise Name"':"exercise",'"Weight (kg)"':"weight",'"Reps"':"volume"};async function R(i){return await(await fetch(i)).text()}async function F(){let i=new h,a=i.parse(await R("data/strong_workouts.csv")),s=i.parse(await R("data/strong_body_weight.csv")),t=k(a,s),r=new y({canvasId:"heaviest-sets-weight-chart",datasets:t.weights}),e=new u({canvasId:"heaviest-sets-volume-chart",datasets:t.volumes}),o=new c({canvasId:"exercises-load-chart",datasets:t.exercisesLoad});new c({canvasId:"workout-load-chart",datasets:t.workoutLoad}),new m({canvasId:"body-weight-chart",datasets:t.bodyWeights}),new x({selectId:"exercises-filter",options:t.labels,onChange:n=>{r.filter(n),e.filter(n),o.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await F());
