var l=class extends Chart{constructor({canvasId:o,datasets:e,scales:r}){let s=document.getElementById(o).getContext("2d"),n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:r.x,y:r.y}},data:{datasets:e}};super(s,n);this._originalDatasets=e}filter(o){this.data.datasets=this._originalDatasets.filter(e=>e.label?.includes(o)),this.update()}};var g=class extends l{constructor({canvasId:a,datasets:o}){super({canvasId:a,datasets:o,scales:g.SCALES})}},p=g;p.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var x=class extends l{constructor({canvasId:a,datasets:o}){super({canvasId:a,datasets:o,scales:x.SCALES})}},d=x;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var L=class extends l{constructor({canvasId:a,datasets:o}){super({canvasId:a,datasets:o,scales:L.SCALES})}},u=L;u.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function c({rows:i,label:a,x:o,y:e}){let r=i.reduce((s,n)=>{let m=n[a],M=n[o],O=n[e];return s[m]||(s[m]={label:m,data:[]}),s[m].data.push({x:M,y:O}),s},{});return Object.values(r)}function f(i){let a=i.reduce((e,r)=>{let t=r.date;e[t]||(e[t]={});let s=r.exercise;return e[t][s]||(e[t][s]={...r,weight:-1/0}),r.weight>=e[t][s].weight&&(e[t][s]=r),e},{});return Object.keys(a).flatMap(e=>Object.values(a[e]))}function C(i){let a=i.reduce((e,r)=>{let t=r.date;e[t]||(e[t]={});let s=r.exercise;return e[t][s]||(e[t][s]={load:0,...r}),e[t][s].load+=r.weight*r.volume,e},{});return Object.keys(a).flatMap(e=>Object.values(a[e]))}function b(i){let a=i.reduce((e,r)=>{let t=r.date;return e[t]||(e[t]={load:0,...r}),e[t].load+=r.weight*r.volume,e},{});return Object.values(a)}var R=["bench","squat","deadlift","pull up","bicep","tricep"],E=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],D=50;function v({rows:i,label:a,minFrequency:o}){let r=c({rows:i,label:a,x:"date",y:"weight"}).reduce((t,s)=>(t[s.label]=s.data.length,t),{});return i.filter(t=>r[t[a]]>=o)}function S({rows:i,label:a,includes:o=[],excludes:e=[]}){return i.filter(r=>o.some(t=>r[a].toString().includes(t))&&e.every(t=>!r[a].toString().includes(t)))}function A(i){i=v({rows:i,label:"exercise",minFrequency:D}),i=S({rows:i,label:"exercise",includes:R,excludes:E});let a=f(i),o=c({rows:a,label:"exercise",x:"date",y:"weight"}),e=c({rows:a,label:"exercise",x:"date",y:"volume"}),r=c({rows:C(i),label:"exercise",x:"date",y:"load"}),t=c({rows:b(i),label:"date",x:"date",y:"load"});return{labels:i.map(s=>s.exercise),weights:o,volumes:e,exercisesLoad:r,workoutLoad:t}}var h=class{constructor({selectId:a,options:o,onChange:e}){let r=document.getElementById(a);r.onchange=s=>e(s.target.value);let t=document.createElement("option");t.value="",t.textContent="(no filter)",r.appendChild(t),[...new Set(o)].sort().forEach(s=>{let n=document.createElement("option");n.value=s,n.textContent=s,r.appendChild(n)})}};var w=class{constructor(a,o=";"){this._rows=this.buildRows(a,o)}rows(){return this._rows}buildRows(a,o){let e=a.split(`
`),r=e[0].split(o);return e.slice(1).map(s=>this.buildRow(r,s,o))}buildRow(a,o,e){let r=o.split(e),t={};for(let s=0;s<a.length;s++){let n=w.HEADERS_MAP[a[s]];n&&(t[n]=this.sanitizeValue(r[s]))}return t}sanitizeValue(a){return a.trim().replaceAll('"',"").toLowerCase()}},y=w;y.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function Y(i){return await(await fetch(i)).text()}async function I(){let i=await Y("data/workouts.csv"),o=new y(i).rows(),e=A(o),r=new u({canvasId:"heaviest-sets-weight-chart",datasets:e.weights}),t=new d({canvasId:"heaviest-sets-volume-chart",datasets:e.volumes}),s=new p({canvasId:"exercises-load-chart",datasets:e.exercisesLoad});new p({canvasId:"workout-load-chart",datasets:e.workoutLoad}),new h({selectId:"exercises-filter",options:e.labels,onChange:n=>{r.filter(n),t.filter(n),s.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await I());
