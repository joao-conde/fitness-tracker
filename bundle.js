var l=class extends Chart{constructor({canvasId:o,datasets:t,scales:a}){let r=document.getElementById(o).getContext("2d"),n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:a.x,y:a.y}},data:{datasets:t}};super(r,n);this._originalDatasets=t}filter(o){this.data.datasets=this._originalDatasets.filter(t=>t.label?.includes(o)),this.update()}};var g=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:g.SCALES})}},d=g;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var x=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:x.SCALES})}},p=x;p.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var w=class extends l{constructor({canvasId:s,datasets:o}){super({canvasId:s,datasets:o,scales:w.SCALES})}},u=w;u.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function c({rows:i,label:s,x:o,y:t}){let a=i.reduce((r,n)=>{let h=n[s],M=n[o],O=n[t];return r[h]||(r[h]={label:h,data:[]}),r[h].data.push({x:M,y:O}),r},{});return Object.values(a)}function f(i){let s=i.reduce((t,a)=>{let e=a.date;t[e]||(t[e]={});let r=a.exercise;return t[e][r]||(t[e][r]={...a,weight:-1/0}),a.weight>=t[e][r].weight&&(t[e][r]=a),t},{});return Object.keys(s).flatMap(t=>Object.values(s[t]))}function C(i){let s=i.reduce((t,a)=>{let e=a.date;t[e]||(t[e]={});let r=a.exercise;return t[e][r]||(t[e][r]={load:0,...a}),t[e][r].load+=a.weight*a.volume,t},{});return Object.keys(s).flatMap(t=>Object.values(s[t]))}function b(i){let s=i.reduce((t,a)=>{let e=a.date;return t[e]||(t[e]={load:0,...a}),t[e].load+=a.weight*a.volume,t},{});return Object.values(s)}var R=["bench","squat","deadlift","pull up","bicep","tricep"],E=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],D=50;function v({rows:i,label:s,minFrequency:o}){let a=c({rows:i,label:s,x:"date",y:"weight"}).reduce((e,r)=>(e[r.label]=r.data.length,e),{});return i.filter(e=>a[e[s]]>=o)}function S({rows:i,label:s,includes:o=[],excludes:t=[]}){return i.filter(a=>o.some(e=>a[s].toString().includes(e))&&t.every(e=>!a[s].toString().includes(e)))}function A(i){i=v({rows:i,label:"exercise",minFrequency:D}),i=S({rows:i,label:"exercise",includes:R,excludes:E});let s=f(i),o=c({rows:s,label:"exercise",x:"date",y:"weight"}),t=c({rows:s,label:"exercise",x:"date",y:"volume"}),a=c({rows:C(i),label:"exercise",x:"date",y:"load"}),e=c({rows:b(i),label:"date",x:"date",y:"load"});return{labels:i.map(r=>r.exercise),weights:o,volumes:t,exercisesLoad:a,workoutLoad:e}}var m=class{constructor({selectId:s,options:o,onChange:t}){let a=document.getElementById(s);a.onchange=r=>t(r.target.value);let e=document.createElement("option");e.value="",e.textContent="",a.appendChild(e),[...new Set(o)].sort().forEach(r=>{let n=document.createElement("option");n.value=r,n.textContent=r,a.appendChild(n)})}};var L=class{constructor(s,o=";"){this._rows=this.buildRows(s,o)}rows(){return this._rows}buildRows(s,o){let t=s.split(`
`),a=t[0].split(o);return t.slice(1).map(r=>this.buildRow(a,r,o))}buildRow(s,o,t){let a=o.split(t),e={};for(let r=0;r<s.length;r++){let n=L.HEADERS_MAP[s[r]];n&&(e[n]=this.sanitizeValue(a[r]))}return e}sanitizeValue(s){return s.trim().replaceAll('"',"").toLowerCase()}},y=L;y.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function Y(i){return await(await fetch(i)).text()}async function I(){let i=await Y("data/workouts.csv"),o=new y(i).rows(),t=A(o),a=new u({canvasId:"heaviest-sets-weight-chart",datasets:t.weights}),e=new p({canvasId:"heaviest-sets-volume-chart",datasets:t.volumes}),r=new d({canvasId:"exercises-load-chart",datasets:t.exercisesLoad});new d({canvasId:"workout-load-chart",datasets:t.workoutLoad}),new m({selectId:"exercises-filter",options:t.labels,onChange:n=>{a.filter(n),e.filter(n),r.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await I());
