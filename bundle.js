var l=class extends Chart{constructor({canvasId:o,datasets:t,scales:s}){let r=document.getElementById(o)?.getContext("2d");if(!r)throw Error("no context");let n={type:"line",options:{plugins:{legend:{display:!1}},scales:{x:s.x,y:s.y}},data:{datasets:t}};super(r,n);this._originalDatasets=t}filter(o){this.data.datasets=this._originalDatasets.filter(t=>t.label?.includes(o)),this.update()}};var m=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:m.SCALES})}},d=m;d.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Total Load (all sets sum of weights * repetitions)"},beginAtZero:!0}};var g=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:g.SCALES})}},p=g;p.SCALES={x:{title:{display:!0,text:"Date"},type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}}},y:{title:{display:!0,text:"Repetitions"},beginAtZero:!0}};var x=class extends l{constructor({canvasId:e,datasets:o}){super({canvasId:e,datasets:o,scales:x.SCALES})}},u=x;u.SCALES={x:{type:"time",time:{unit:"day",tooltipFormat:"DD/MM/YYYY",displayFormats:{day:"DD/MM/YYYY"}},title:{display:!0,text:"Date"}},y:{title:{display:!0,text:"Weight (kg)"},beginAtZero:!0}};function c({rows:i,label:e,x:o,y:t}){let s=i.reduce((r,n)=>(r[n[e]]||(r[n[e]]={label:n[e],data:[]}),r[n[e]].data.push({x:n[o],y:n[t]}),r),{});return Object.values(s)}function w(i){let e=i.reduce((t,s)=>{let a=s.date;t[a]||(t[a]={});let r=s.exercise;return t[a][r]||(t[a][r]={...s,weight:-1/0}),s.weight>=t[a][r].weight&&(t[a][r]=s),t},{});return Object.keys(e).flatMap(t=>Object.values(e[t]))}function f(i){let e=i.reduce((t,s)=>{let a=s.date;t[a]||(t[a]={});let r=s.exercise;return t[a][r]||(t[a][r]={load:0,...s}),t[a][r].load+=s.weight*s.volume,t},{});return Object.keys(e).flatMap(t=>Object.values(e[t]))}function C(i){let e=i.reduce((t,s)=>{let a=s.date;return t[a]||(t[a]={load:0,...s}),t[a].load+=s.weight*s.volume,t},{});return Object.values(e)}var R=["bench","squat","deadlift","pull up","bicep","tricep"],b=["decline","bodyweight","close grip","assisted","cable","rope tricep pushdown"],E=50;function D({rows:i,label:e,minFrequency:o}){let s=c({rows:i,label:e,x:"date",y:"weight"}).reduce((a,r)=>(a[r.label]=r.data.length,a),{});return i.filter(a=>s[a[e]]>=o)}function v({rows:i,label:e,includes:o=[],excludes:t=[]}){return i.filter(s=>o.some(a=>s[e].toString().includes(a))&&t.every(a=>!s[e].toString().includes(a)))}function S(i){i=D({rows:i,label:"exercise",minFrequency:E}),i=v({rows:i,label:"exercise",includes:R,excludes:b});let e=w(i),o=c({rows:e,label:"exercise",x:"date",y:"weight"}),t=c({rows:e,label:"exercise",x:"date",y:"volume"}),s=c({rows:f(i),label:"exercise",x:"date",y:"load"}),a=c({rows:C(i),label:"date",x:"date",y:"load"});return{labels:i.map(r=>r.exercise),weights:o,volumes:t,exercisesLoad:s,workoutLoad:a}}var h=class{constructor({selectId:e,options:o,onChange:t}){let s=document.getElementById(e);if(!s)return;s.onchange=r=>t(r.target.value);let a=document.createElement("option");a.value="",a.textContent="",s.appendChild(a),[...new Set(o)].sort().forEach(r=>{let n=document.createElement("option");n.value=r,n.textContent=r,s.appendChild(n)})}};var L=class{constructor(e,o=";"){this._rows=this.buildRows(e,o)}rows(){return this._rows}buildRows(e,o){let t=e.split(`
`),s=t[0].split(o);return t.slice(1).map(r=>this.buildRow(s,r,o))}buildRow(e,o,t){let s=o.split(t),a={};for(let r=0;r<e.length;r++){let n=L.HEADERS_MAP[e[r]];n&&(a[n]=this.sanitizeValue(s[r]))}return a}sanitizeValue(e){return e.trim().replaceAll('"',"").toLowerCase()}},y=L;y.HEADERS_MAP={Date:"date","Exercise Name":"exercise",Weight:"weight",Reps:"volume"};async function A(i){return await(await fetch(i)).text()}async function Y(){let i=await A("data/workouts.csv"),o=new y(i).rows(),t=S(o),s=new u({canvasId:"heaviest-sets-weight-chart",datasets:t.weights}),a=new p({canvasId:"heaviest-sets-volume-chart",datasets:t.volumes}),r=new d({canvasId:"exercises-load-chart",datasets:t.exercisesLoad});new d({canvasId:"workout-load-chart",datasets:t.workoutLoad}),new h({selectId:"exercises-filter",options:t.labels,onChange:n=>{s.filter(n),a.filter(n),r.filter(n)}})}document.addEventListener("DOMContentLoaded",async()=>await Y());
